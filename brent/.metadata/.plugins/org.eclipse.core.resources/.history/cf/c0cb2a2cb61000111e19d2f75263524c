package cqlsh;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;

import org.apache.cassandra.thrift.*;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TFramedTransport;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TSocket;


/*
 * This is a really simple CQL Shell.
 * 
 * quit will end the session.
 * 
 */

public class cqlsh {
	public static void main(String[] args) throws Exception {
		// Set up decoder.
		Charset charset = Charset.forName("UTF-8");
		CharsetDecoder decoder = charset.newDecoder();

		// Set up connection.
		TTransport transport = new TFramedTransport(new TSocket(args[0], 9160));
		TProtocol protocol = new TBinaryProtocol(transport);
		Cassandra.Client client = new Cassandra.Client(protocol);
		transport.open();

		// Set up input loop
		boolean go = true;
		String input = "";
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		// Input loop
		while (go) {
			System.out.print("cqlsh> ");
			input = br.readLine();

			if (input.contentEquals("quit;")) {
				go = false;
			} else {
				// Execute the query
				try {
					ByteBuffer query = ByteBuffer.wrap(input.getBytes());
					CqlResult results = client.execute_cql_query(query, Compression.NONE);

					// Display any results
					for (CqlRow row : results.getRows()) {
						System.out.println("");
						for (Column col : row.getColumns()) {
							System.out.println(decoder.decode(col.name) + ":" + decoder.decode(col.value));		
						}

					}
				} catch (Exception e) {
						System.out.println("Exception: " +e.toString() + ":" + e.getMessage());
				}
			}

		}
		transport.flush();
		transport.close();
	}
}
